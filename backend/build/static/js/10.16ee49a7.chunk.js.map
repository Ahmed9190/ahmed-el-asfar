{"version":3,"sources":["components/toaster/toaser.tsx","components/SignUp/SignUp.jsx"],"names":["Toast","msg","type","time","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","withRouter","history","push","useState","newUserData","setNewUserData","useEffect","confirmPassword","document","querySelectorAll","password","setCustomValidity","handleChangeGender","gender","beforeChange","onSubmit","e","preventDefault","axios","post","then","data","catch","response","includes","className","label","map","i","Group","Control","name","placeholder","required","autoFocus","onChange","target","value","Check","id","checked","Type","Label","htmlFor","as","column","variant","to"],"mappings":"+HAAA,8CAEaA,EAAQ,SAACC,EAAaC,GAAd,IAA6BC,EAA7B,uDAA4C,KAA5C,OACnBD,EACIE,IAAMC,QAAQJ,EAAK,CACjBK,SAAU,cACVC,UAAWJ,EACXK,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZT,IAAMU,MAAMb,EAAK,CACfK,SAAU,cACVC,UAAWJ,EACXK,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,M,2KC+GHE,uBA5HA,SAAC,GAA0B,EAAxBC,QAAWC,KAAc,IAAD,EACFC,mBAAS,IADP,mBACjCC,EADiC,KACpBC,EADoB,KAGxCC,qBAAU,WACR,IAAMC,EAAkBC,SAASC,iBAAiB,SAAS,GACvDL,EAAYG,kBAAoBH,EAAYM,SAC9CH,EAAgBI,kBAAkB,+HAElCJ,EAAgBI,kBAAkB,MAEnC,CAACP,IAEJ,IAmDMQ,EAAqB,SAACC,GAC1BR,GAAe,SAACS,GAAD,mBAAC,eAAuBA,GAAxB,IAAsCD,eAGvD,OACE,eAAC,IAAD,CAAME,SA7BqB,SAACC,GAQ5BA,EAAEC,iBACFC,IACGC,KAAK,YAAaf,GAClBgB,MAAK,YAAmB,EAAhBC,KACPpC,YAAM,mHAAyB,MAGhCqC,OAAM,SAACN,GAAO,IAAD,KACZ,UAAIA,EAAEO,gBAAN,aAAI,EAAYF,KAAKG,SAAS,UAC5BvC,YAAM,+KAAmC,IACtC,UAAI+B,EAAEO,gBAAN,aAAI,EAAYF,KAAKG,SAAS,WACjCvC,YAAM,2IAA6B,GAChCA,YAAM,+LAAyC,OASlBwC,UAAU,eAAhD,UAxDiB,CACjB,CACEC,MAAO,sEACPvC,KAAM,QAER,CACEuC,MAAO,gEACPvC,KAAM,UAER,CACEuC,MAAO,4EACPvC,KAAM,QAER,CACEuC,MAAO,oGACPvC,KAAM,SAER,CACEuC,MAAO,gEACPvC,KAAM,YAER,CACEuC,MAAO,+FACPvC,KAAM,aAkCMwC,KAAI,WAAkBC,GAAlB,IAAGF,EAAH,EAAGA,MAAOvC,EAAV,EAAUA,KAAV,OACd,cAAC,IAAK0C,MAAN,UACE,cAAC,IAAKC,QAAN,CACEC,KAAY,IAANH,EAAUzC,EAAO,kBACvBsC,UAAU,eACVO,YAAaN,EACbO,UAAQ,EACRC,UAAiB,IAANN,EACXzC,KAAMA,EACNgD,SAAU,oBAAGC,OAAUC,EAAb,EAAaA,MAAON,EAApB,EAAoBA,KAApB,OACR1B,GAAe,SAACS,GAAD,mBAAC,eACXA,GADU,kBAEZiB,EAAOM,WAXCT,MAiBnB,sBAAKH,UAAU,yBAAf,UACE,cAAC,IAAKa,MAAN,CACEnD,KAAK,QACL4C,KAAK,MACLQ,GAAG,YACHC,QAASpC,EAAYqC,KACrBN,SAAU,kBAAMvB,GAAmB,MAErC,cAAC,IAAK8B,MAAN,CAAYC,QAAQ,YAAYC,GAAG,SAASC,QAAM,EAAlD,gCAGA,cAAC,IAAKP,MAAN,CACEnD,KAAK,QACL4C,KAAK,MACLQ,GAAG,cACHC,QAASpC,EAAYqC,KACrBN,SAAU,kBAAMvB,GAAmB,MAErC,cAAC,IAAK8B,MAAN,CAAYC,QAAQ,cAAcC,GAAG,SAASC,QAAM,EAApD,yCAKF,cAAC,IAAD,CAAQC,QAAQ,UAAU3D,KAAK,SAASsC,UAAU,uBAAlD,qEAGA,cAAC,IAAD,CAAMsB,GAAG,kBAAT,SACE,qBAAKtB,UAAU,kBAAf,SACE,sBAAMA,UAAU,wBAAhB","file":"static/js/10.16ee49a7.chunk.js","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nexport const Toast = (msg: string, type: boolean, time: number = 2500) =>\r\n  type\r\n    ? toast.success(msg, {\r\n        position: \"bottom-left\",\r\n        autoClose: time,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    : toast.error(msg, {\r\n        position: \"bottom-left\",\r\n        autoClose: time,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"./SignUp.scss\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Toast } from \"./../toaster/toaser\";\r\n\r\nconst SignUp = ({ history: { push } }) => {\r\n  const [newUserData, setNewUserData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const confirmPassword = document.querySelectorAll(\"input\")[5];\r\n    if (newUserData.confirmPassword !== newUserData.password) {\r\n      confirmPassword.setCustomValidity(\"كلمة المرور غير متطابقة\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  }, [newUserData]);\r\n\r\n  const SignUpForm = [\r\n    {\r\n      label: \"اسم المستخدم\",\r\n      type: \"name\",\r\n    },\r\n    {\r\n      label: \"رقم المحمول\",\r\n      type: \"mobnum\",\r\n    },\r\n    {\r\n      label: \"تاريخ الميلاد\",\r\n      type: \"date\",\r\n    },\r\n    {\r\n      label: \"البريد الالكتروني\",\r\n      type: \"email\",\r\n    },\r\n    {\r\n      label: \"كلمة المرور\",\r\n      type: \"password\",\r\n    },\r\n    {\r\n      label: \"تأكيد كلمة المرور\",\r\n      type: \"password\",\r\n    },\r\n  ];\r\n\r\n  const handleSubmitRegister = (e) => {\r\n    // const confirm_password = document.querySelectorAll('input')[3];\r\n    // e.preventDefault();\r\n    // if (newUserData.confirmPassword !== newUserData.password)\r\n    //   confirm_password.setCustomValidity('كلمة المرور غير متطابقة');\r\n    // else {\r\n    //   confirm_password.setCustomValidity('');\r\n    // }\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/register\", newUserData)\r\n      .then(({ data: res }) => {\r\n        Toast(\"تم تسجيل الحساب بنجاح\", true);\r\n        // push(\"/account/signin\");\r\n      })\r\n      .catch((e) => {\r\n        if (e.response?.data.includes(\"email\"))\r\n          Toast(\"البريد الإلكتروني مستخدم بالفعل\", false);\r\n        else if (e.response?.data.includes(\"mobnum\"))\r\n          Toast(\"رقم المحمول مستخدم بالفعل\", false);\r\n        else Toast(\"حدث خطأ ما ، الرجاء المحاولة مرة أخرى\", false);\r\n      });\r\n  };\r\n\r\n  const handleChangeGender = (gender) => {\r\n    setNewUserData((beforeChange) => ({ ...beforeChange, gender }));\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmitRegister} className=\"sign-up-form\">\r\n      {SignUpForm.map(({ label, type }, i) => (\r\n        <Form.Group key={i}>\r\n          <Form.Control\r\n            name={i !== 5 ? type : \"confirmPassword\"}\r\n            className=\"inputs-style\"\r\n            placeholder={label}\r\n            required\r\n            autoFocus={i === 0}\r\n            type={type}\r\n            onChange={({ target: { value, name } }) =>\r\n              setNewUserData((beforeChange) => ({\r\n                ...beforeChange,\r\n                [name]: value,\r\n              }))\r\n            }\r\n          />\r\n        </Form.Group>\r\n      ))}\r\n      <div className=\"signup-register-radios\">\r\n        <Form.Check\r\n          type=\"radio\"\r\n          name=\"sex\"\r\n          id=\"maleRadio\"\r\n          checked={newUserData.Type}\r\n          onChange={() => handleChangeGender(true)}\r\n        />\r\n        <Form.Label htmlFor=\"maleRadio\" as=\"legend\" column>\r\n          ذكر\r\n        </Form.Label>\r\n        <Form.Check\r\n          type=\"radio\"\r\n          name=\"sex\"\r\n          id=\"femaleRadio\"\r\n          checked={newUserData.Type}\r\n          onChange={() => handleChangeGender(false)}\r\n        />\r\n        <Form.Label htmlFor=\"femaleRadio\" as=\"legend\" column>\r\n          أنثى\r\n        </Form.Label>\r\n      </div>\r\n\r\n      <Button variant=\"primary\" type=\"submit\" className=\"sign-up-button-style\">\r\n        إنشاء حساب\r\n      </Button>\r\n      <Link to=\"/account/signin\">\r\n        <div className=\"sign-up-buttons\">\r\n          <span className=\"sign-in-buttons-style\">\r\n            لديك حساب بالفعل ؟ سجل الدخول\r\n          </span>\r\n        </div>\r\n      </Link>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n"],"sourceRoot":""}