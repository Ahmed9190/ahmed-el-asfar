{"version":3,"sources":["components/toaster/toaser.tsx","components/forget-password/forget-password-page3/forget-password-page3.jsx"],"names":["Toast","msg","type","time","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","ForgetPasswordPage3","id","push","history","useState","newPasswords","setNewPasswords","useEffect","confirmPassword","document","querySelectorAll","password","setCustomValidity","onSubmit","e","preventDefault","axios","post","then","data","catch","className","placeholder","name","map","i","props","Group","controlId","Control","autoFocus","required","onChange","target","value","beforeChange","variant"],"mappings":"+HAAA,8CAEaA,EAAQ,SAACC,EAAaC,GAAd,IAA6BC,EAA7B,uDAA4C,KAA5C,OACnBD,EACIE,IAAMC,QAAQJ,EAAK,CACjBK,SAAU,cACVC,UAAWJ,EACXK,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZT,IAAMU,MAAMb,EAAK,CACfK,SAAU,cACVC,UAAWJ,EACXK,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,M,sIC6DHE,UA1Ea,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,GAAeC,EAAa,EAAxBC,QAAWD,KAAa,EACjBE,mBAAS,IADQ,mBAClDC,EADkD,KACpCC,EADoC,KAGzDC,qBAAU,WACR,IAAMC,EAAkBC,SAASC,iBAAiB,SAAS,GACvDL,EAAaG,kBAAoBH,EAAaM,SAChDH,EAAgBI,kBAAkB,+HAElCJ,EAAgBI,kBAAkB,MAEnC,CAACP,IA+BJ,OACE,eAAC,IAAD,CACEQ,SA/ByB,SAACC,GAC5BA,EAAEC,iBADgC,IAE1BJ,EAAaN,EAAbM,SACRK,IACGC,KAAK,kBAAmB,CAAEN,WAAUV,OACpCiB,MAAK,YAAmB,EAAhBC,KACPjB,EAAK,mBACLjB,YAAM,6GAAwB,MAE/BmC,OAAM,SAACN,GAGN7B,YAAM,+LAAyC,OAoBjDoC,UAAU,6BAFZ,UAdiB,CACjB,CACEC,YAAa,gEACbnC,KAAM,WACNoC,KAAM,YAER,CACED,YAAa,+FACbnC,KAAM,WACNoC,KAAM,oBASMC,KAAI,WAAeC,GAAf,IAAMC,EAAN,2BACd,cAAC,IAAKC,MAAN,CAAoBC,UAAU,iBAA9B,SACE,cAAC,IAAKC,QAAN,2BACMH,GADN,IAEEL,UAAU,eACVS,UAAiB,IAANL,EACXM,UAAQ,EACRC,SAAU,oBAAGC,OAAUC,EAAb,EAAaA,MAAOX,EAApB,EAAoBA,KAApB,OACRjB,GAAgB,SAAC6B,GAAD,mBAAC,eACZA,GADW,kBAEbZ,EAAOW,YATCT,MAgBnB,cAAC,IAAD,CACEW,QAAQ,UACRjD,KAAK,SACLkC,UAAU,qCAHZ,oJ","file":"static/js/13.087d0ff4.chunk.js","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nexport const Toast = (msg: string, type: boolean, time: number = 2500) =>\r\n  type\r\n    ? toast.success(msg, {\r\n        position: \"bottom-left\",\r\n        autoClose: time,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    : toast.error(msg, {\r\n        position: \"bottom-left\",\r\n        autoClose: time,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport \"./forget-password-page3.scss\";\r\nimport { Toast } from \"./../../toaster/toaser\";\r\n\r\nconst ForgetPasswordPage3 = ({ id, history: { push } }) => {\r\n  const [newPasswords, setNewPasswords] = useState({});\r\n\r\n  useEffect(() => {\r\n    const confirmPassword = document.querySelectorAll(\"input\")[1];\r\n    if (newPasswords.confirmPassword !== newPasswords.password) {\r\n      confirmPassword.setCustomValidity(\"كلمة المرور غير متطابقة\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  }, [newPasswords]);\r\n\r\n  const handleSubmitRegister = (e) => {\r\n    e.preventDefault();\r\n    const { password } = newPasswords;\r\n    axios\r\n      .post(\"/setNewPassword\", { password, id })\r\n      .then(({ data: res }) => {\r\n        push(\"/account/signin\");\r\n        Toast(\"تم تحديث كلمة المرور\", true);\r\n      })\r\n      .catch((e) => {\r\n        // if (e.response?.data) alert(\"Wrong Password\");\r\n        // else\r\n        Toast(\"حدث خطأ ما ، الرجاء المحاولة مرة اخرى\", false);\r\n      });\r\n  };\r\n\r\n  const inputsData = [\r\n    {\r\n      placeholder: \"كلمة المرور\",\r\n      type: \"password\",\r\n      name: \"password\",\r\n    },\r\n    {\r\n      placeholder: \"تأكيد كلمة المرور\",\r\n      type: \"password\",\r\n      name: \"confirmPassword\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={handleSubmitRegister}\r\n      className=\"forget-password-page3-form\"\r\n    >\r\n      {inputsData.map(({ ...props }, i) => (\r\n        <Form.Group key={i} controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            {...props}\r\n            className=\"inputs-style\"\r\n            autoFocus={i === 0}\r\n            required\r\n            onChange={({ target: { value, name } }) =>\r\n              setNewPasswords((beforeChange) => ({\r\n                ...beforeChange,\r\n                [name]: value,\r\n              }))\r\n            }\r\n          />\r\n        </Form.Group>\r\n      ))}\r\n\r\n      <Button\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n        className=\"forget-password-page1-button-style\"\r\n      >\r\n        تعيين كلمة المرور الجديد\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordPage3;\r\n"],"sourceRoot":""}